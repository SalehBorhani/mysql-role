---
# tasks file for mysql
- name: Install required package
  apt:
    name: "{{ mysql_packages }}"
    update_cache: yes

- name: Install pymysql
  pip:
    name: PyMySQL

- name: Render Mysql master configuration file
  template:
    src: templates/mysql.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    mode: '0644'
  when:
    - mysql_replication_role == 'master'

- name: Restart the mysql master service
  systemd:
    name: mysql
    state: restarted
  when:
    - mysql_replication_role == 'master'

- name: Ensure replication user exists on master.
  mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: "{{ mysql_replication_user.name }}"
    host: "{{ hostvars['mysql_slave'].ansible_host | default('%') }}"
    password: "{{ mysql_replication_user.password }}"
    priv: "{{ mysql_replication_user.privilage }}"
    state: present
  register: mysql_replication_user_stat
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_user.name is defined

- name: Check master replication status.
  mysql_replication:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    mode: getprimary
  register: master
  when:
    - mysql_replication_role == 'master'

- name: Set replication facts for slave (only on master)
  set_fact:
    master_log_file: "{{ master['File'] }}"
    master_log_pos: "{{ master['Position'] | int }}"
  when: mysql_replication_role == 'master'


- name: Render Mysql slave configuration file
  template:
    src: templates/mysql.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    mode: '0644'
  when:
    - mysql_replication_role == 'slave'

- name: Restart the mysql slave service
  systemd:
    name: mysql
    state: restarted
  when:
    - mysql_replication_role == 'slave'

- name: Configure replication on the slave.
  mysql_replication:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    mode: changeprimary
    master_host: "{{ hostvars['mysql_master'].ansible_host }}"
    master_user: "{{ mysql_replication_user.name }}"
    master_password: "{{ mysql_replication_user.password }}"
    master_log_file: "{{ hostvars['mysql_master'].master_log_file }}"
    master_log_pos: "{{ hostvars['mysql_master'].master_log_pos }}"
  when:
    - mysql_replication_role == 'slave'

- name: Start the slave
  mysql_replication:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    mode: startreplica
  when:
    - mysql_replication_role == 'slave'

- name: Get slave status
  mysql_replication:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    mode: getreplica
  register: salve_status
  when:
    - mysql_replication_role == 'slave'

- name: Show slave status
  debug:
    msg: salve_status.stdout
  when:
    - mysql_replication_role == 'slave'

